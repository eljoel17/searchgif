{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GrifGridIem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","placeholder","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridIem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6KAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAQ,OAAIP,GAAJ,mBAAmBO,OACzCN,EAAc,MAMlB,SAEK,uBACDO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAoBnBG,YAAY,oB,+BCvBXC,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DACbC,EADa,iDAEyBC,UAAUT,GAFnC,+DAGAU,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAahBM,GAbgB,4CAAH,sDCGPO,EAAc,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAE7B,OACI,sBAAKI,UAAU,OAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLFO,EAAU,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAEzB,ECH2B,SAACA,GAEzB,MAA0BR,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEPvB,EAAQN,GACH8B,MAAK,SAAAd,GAEFe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAU,MAGf,UAGb,CAAC1B,IAII2B,EDtBsBK,CAAahC,GAAhCmB,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAKpB,OACE,qCACE,6BAAK1B,IACJ0B,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdnBgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OAEI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI2C,EAAWnB,KAAI,SAAAf,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCrBrBmC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a0743996.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories(category =>[inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        \r\n             <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Search a GIF\"\r\n            \r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=dKCLxGlH18mHOazHBUlrXRQZX1Y4z2b3`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\nreturn gifs;\r\n\r\n};","\r\nimport React from 'react'\r\n\r\n \r\n\r\nexport const GrifGridIem = ({url,title}) => {\r\n   // console.log(title);\r\n    return (\r\n        <div className='card'>\r\n           <img src={url} alt={title}/>   \r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n  import { GrifGridIem } from \"./GrifGridIem\";\r\n \r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n const {data: images, loading} = useFetchGifs(category);\r\n \r\n   \r\n \r\n  \r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GrifGridIem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../components/helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGifs(category)\r\n            .then(img =>{\r\n\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: img,\r\n                        loading:  false\r\n                    });\r\n                    \r\n                }, 1000);\r\n            })\r\n\r\n    },[category])\r\n   \r\n\r\n\r\n    return state;\r\n\r\n\r\n\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //onst categories = ['Dragon Ball','Sambomzado','MÃ©xico'];\r\n\r\n    const [categories, setCategories] = useState(['Spiderman']);\r\n\r\n    /* const handleAdd=()=>{\r\n\r\n        setCategories([...categories,'Holaamigos']);\r\n\r\n    } */\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        <ol>\r\n        {\r\n            categories.map(category =>\r\n                <GifGrid \r\n                key={category}\r\n                category={category}\r\n                />\r\n            )       \r\n        }\r\n\r\n\r\n        </ol>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n \n \nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}